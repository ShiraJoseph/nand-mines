function Image.newBitmap 0
push constant 16
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
push argument 1
call Math.multiply 2
pop this 2
push this 2
call Array.new 1
pop this 3
push constant 0
pop this 10
push pointer 0
return
function Image.newDelta 0
push constant 16
call Memory.alloc 1
pop pointer 0
push argument 1
pop this 8
push argument 2
pop this 9
push argument 3
pop this 0
push argument 4
pop this 1
push argument 0
pop this 2
push this 2
call Array.new 1
pop this 3
push constant 0
pop this 10
push pointer 0
return
function Image.newRender 0
push constant 16
call Memory.alloc 1
pop pointer 0
push constant 1
neg
pop this 10
push pointer 0
push argument 0
push argument 1
call Image.resetRender 3
pop temp 0
push argument 2
pop this 0
push argument 3
pop this 1
push constant 16
pop this 2
push this 2
call Array.new 1
pop this 3
push pointer 0
return
function Image.newCompressed 0
push constant 16
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
push argument 1
call Math.multiply 2
pop this 2
push this 2
call Array.new 1
pop this 3
push argument 2
pop this 5
push argument 2
call Array.new 1
pop this 6
push constant 0
pop this 10
push pointer 0
return
function Image.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Image.disposeCompressed 1
pop temp 0
push this 3
call Array.dispose 1
pop temp 0
push constant 0
return
function Image.disposeCompressed 0
push argument 0
pop pointer 0
push this 5
push constant 0
gt
if-goto IF_0
goto ENDIF_0
label IF_0
push this 6
call Array.dispose 1
pop temp 0
label ENDIF_0
push constant 0
pop this 5
push constant 0
return
function Image.getBitmap 0
push argument 0
pop pointer 0
push this 3
return
function Image.getLength 0
push argument 0
pop pointer 0
push this 2
return
function Image.getWidth 0
push argument 0
pop pointer 0
push this 0
return
function Image.getHeight 0
push argument 0
pop pointer 0
push this 1
return
function Image.getData 0
push argument 0
pop pointer 0
push this 6
return
function Image.getDataLength 0
push argument 0
pop pointer 0
push this 5
return
function Image.isRender 0
push argument 0
pop pointer 0
push this 10
return
function Image.resetRender 0
push argument 0
pop pointer 0
push argument 1
pop this 11
push argument 2
pop this 12
push constant 0
pop this 13
push constant 0
pop this 14
push constant 16384
push this 11
add
push this 12
push constant 32
call Math.multiply 2
add
pop this 15
push constant 0
return
function Image.push 1
push argument 0
pop pointer 0
push this 2
push this 7
sub
pop local 0
push local 0
push constant 0
eq
if-goto IF_1
goto ENDIF_1
label IF_1
push constant 0
return
label ENDIF_1
push local 0
push constant 15
gt
if-goto IF_2
push argument 1
push this 3
push this 7
add
pop pointer 1
pop that 0
push local 0
push constant 1
gt
if-goto IF_3
goto ENDIF_3
label IF_3
push argument 2
push this 3
push this 7
push constant 1
add
add
pop pointer 1
pop that 0
label ENDIF_3
push local 0
push constant 2
gt
if-goto IF_4
goto ENDIF_4
label IF_4
push argument 3
push this 3
push this 7
push constant 2
add
add
pop pointer 1
pop that 0
label ENDIF_4
push local 0
push constant 3
gt
if-goto IF_5
goto ENDIF_5
label IF_5
push argument 4
push this 3
push this 7
push constant 3
add
add
pop pointer 1
pop that 0
label ENDIF_5
push local 0
push constant 4
gt
if-goto IF_6
goto ENDIF_6
label IF_6
push argument 5
push this 3
push this 7
push constant 4
add
add
pop pointer 1
pop that 0
label ENDIF_6
push local 0
push constant 5
gt
if-goto IF_7
goto ENDIF_7
label IF_7
push argument 6
push this 3
push this 7
push constant 5
add
add
pop pointer 1
pop that 0
label ENDIF_7
push local 0
push constant 6
gt
if-goto IF_8
goto ENDIF_8
label IF_8
push argument 7
push this 3
push this 7
push constant 6
add
add
pop pointer 1
pop that 0
label ENDIF_8
push local 0
push constant 7
gt
if-goto IF_9
goto ENDIF_9
label IF_9
push argument 8
push this 3
push this 7
push constant 7
add
add
pop pointer 1
pop that 0
label ENDIF_9
push local 0
push constant 8
gt
if-goto IF_10
goto ENDIF_10
label IF_10
push argument 9
push this 3
push this 7
push constant 8
add
add
pop pointer 1
pop that 0
label ENDIF_10
push local 0
push constant 9
gt
if-goto IF_11
goto ENDIF_11
label IF_11
push argument 10
push this 3
push this 7
push constant 9
add
add
pop pointer 1
pop that 0
label ENDIF_11
push local 0
push constant 10
gt
if-goto IF_12
goto ENDIF_12
label IF_12
push argument 11
push this 3
push this 7
push constant 10
add
add
pop pointer 1
pop that 0
label ENDIF_12
push local 0
push constant 11
gt
if-goto IF_13
goto ENDIF_13
label IF_13
push argument 12
push this 3
push this 7
push constant 11
add
add
pop pointer 1
pop that 0
label ENDIF_13
push local 0
push constant 12
gt
if-goto IF_14
goto ENDIF_14
label IF_14
push argument 13
push this 3
push this 7
push constant 12
add
add
pop pointer 1
pop that 0
label ENDIF_14
push local 0
push constant 13
gt
if-goto IF_15
goto ENDIF_15
label IF_15
push argument 14
push this 3
push this 7
push constant 13
add
add
pop pointer 1
pop that 0
label ENDIF_15
push local 0
push constant 14
gt
if-goto IF_16
goto ENDIF_16
label IF_16
push argument 15
push this 3
push this 7
push constant 14
add
add
pop pointer 1
pop that 0
label ENDIF_16
push this 2
pop this 7
goto ENDIF_2
label IF_2
push argument 1
push this 3
push this 7
add
pop pointer 1
pop that 0
push argument 2
push this 3
push this 7
push constant 1
add
add
pop pointer 1
pop that 0
push argument 3
push this 3
push this 7
push constant 2
add
add
pop pointer 1
pop that 0
push argument 4
push this 3
push this 7
push constant 3
add
add
pop pointer 1
pop that 0
push argument 5
push this 3
push this 7
push constant 4
add
add
pop pointer 1
pop that 0
push argument 6
push this 3
push this 7
push constant 5
add
add
pop pointer 1
pop that 0
push argument 7
push this 3
push this 7
push constant 6
add
add
pop pointer 1
pop that 0
push argument 8
push this 3
push this 7
push constant 7
add
add
pop pointer 1
pop that 0
push argument 9
push this 3
push this 7
push constant 8
add
add
pop pointer 1
pop that 0
push argument 10
push this 3
push this 7
push constant 9
add
add
pop pointer 1
pop that 0
push argument 11
push this 3
push this 7
push constant 10
add
add
pop pointer 1
pop that 0
push argument 12
push this 3
push this 7
push constant 11
add
add
pop pointer 1
pop that 0
push argument 13
push this 3
push this 7
push constant 12
add
add
pop pointer 1
pop that 0
push argument 14
push this 3
push this 7
push constant 13
add
add
pop pointer 1
pop that 0
push argument 15
push this 3
push this 7
push constant 14
add
add
pop pointer 1
pop that 0
push argument 16
push this 3
push this 7
push constant 15
add
add
pop pointer 1
pop that 0
push this 7
push constant 16
add
pop this 7
label ENDIF_2
push this 10
if-goto IF_17
goto ENDIF_17
label IF_17
push pointer 0
call Image.pushRender 1
pop temp 0
push constant 0
pop this 7
label ENDIF_17
push constant 0
return
function Image.draw 4
push argument 0
pop pointer 0
push constant 16384
push argument 1
add
push argument 2
push constant 32
call Math.multiply 2
add
pop local 2
label WHILE_18
push local 1
push this 1
lt
not
if-goto END_WHILE_18
push constant 0
pop local 0
label WHILE_19
push local 0
push this 0
lt
not
if-goto END_WHILE_19
push this 3
push local 3
push local 0
add
add
pop pointer 1
push that 0
push local 2
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_19
label END_WHILE_19
push local 2
push constant 32
add
pop local 2
push local 3
push this 0
add
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_18
label END_WHILE_18
push constant 0
return
function Image.drawVScale 8
push argument 0
pop pointer 0
push argument 3
push constant 0
eq
if-goto IF_20
goto ENDIF_20
label IF_20
push constant 0
return
label ENDIF_20
push constant 16384
push argument 1
add
push argument 2
push constant 32
call Math.multiply 2
add
pop local 2
push this 1
push argument 3
call Math.divide 2
push this 0
call Math.multiply 2
pop local 5
push this 1
push argument 3
call MathsToo.mod 2
pop local 6
push this 0
pop local 7
push argument 3
push constant 0
lt
if-goto IF_21
goto ENDIF_21
label IF_21
push argument 3
neg
pop argument 3
push this 1
push constant 1
sub
push this 0
call Math.multiply 2
pop local 3
push local 7
neg
pop local 7
label ENDIF_21
push constant 0
pop local 4
label WHILE_22
push local 1
push argument 3
lt
not
if-goto END_WHILE_22
push constant 0
pop local 0
label WHILE_23
push local 0
push this 0
lt
not
if-goto END_WHILE_23
push this 3
push local 3
push local 0
add
add
pop pointer 1
push that 0
push local 2
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_23
label END_WHILE_23
push local 3
push local 5
add
pop local 3
push local 4
push local 6
add
pop local 4
push local 4
push argument 3
gt
if-goto IF_24
goto ENDIF_24
label IF_24
push local 4
push argument 3
sub
pop local 4
push local 3
push local 7
add
pop local 3
label ENDIF_24
push local 2
push constant 32
add
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_22
label END_WHILE_22
push constant 0
return
function Image.drawColVScale 7
push argument 0
pop pointer 0
push argument 4
push constant 0
eq
if-goto IF_25
goto ENDIF_25
label IF_25
push constant 0
return
label ENDIF_25
push constant 16384
push argument 1
add
push argument 2
push constant 32
call Math.multiply 2
add
pop local 1
push this 1
push argument 4
call Math.divide 2
push this 0
call Math.multiply 2
pop local 4
push this 1
push argument 4
call MathsToo.mod 2
pop local 5
push this 0
pop local 6
push argument 4
push constant 0
lt
if-goto IF_26
goto ENDIF_26
label IF_26
push argument 4
neg
pop argument 4
push this 1
push constant 1
sub
push this 0
call Math.multiply 2
pop local 2
push local 6
neg
pop local 6
label ENDIF_26
push local 2
push argument 3
add
pop local 2
push constant 0
pop local 3
label WHILE_27
push local 0
push argument 4
lt
not
if-goto END_WHILE_27
push this 3
push local 2
add
pop pointer 1
push that 0
push local 1
push constant 0
add
pop pointer 1
pop that 0
push local 2
push local 4
add
pop local 2
push local 3
push local 5
add
pop local 3
push local 3
push argument 4
gt
if-goto IF_28
goto ENDIF_28
label IF_28
push local 3
push argument 4
sub
pop local 3
push local 2
push local 6
add
pop local 2
label ENDIF_28
push local 1
push constant 32
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_27
label END_WHILE_27
push constant 0
return
function Image.drawDelta 7
push argument 0
pop pointer 0
push argument 1
push this 8
add
pop argument 1
push argument 2
push this 9
add
pop argument 2
push constant 16384
push argument 1
add
push argument 2
push constant 32
call Math.multiply 2
add
pop local 2
push this 3
push constant 0
add
pop pointer 1
push that 0
pop local 4
push constant 1
pop local 5
push constant 32767
neg
push constant 1
sub
pop local 6
push constant 1
pop local 3
label WHILE_29
push local 1
push this 1
lt
not
if-goto END_WHILE_29
push constant 0
pop local 0
label WHILE_30
push local 0
push this 0
lt
not
if-goto END_WHILE_30
push local 4
push local 5
and
if-goto IF_31
goto ENDIF_31
label IF_31
push this 3
push local 3
add
pop pointer 1
push that 0
push local 2
push local 0
add
pop pointer 1
pop that 0
push local 3
push constant 1
add
pop local 3
label ENDIF_31
push local 5
push local 6
eq
if-goto IF_32
push local 5
push local 5
add
pop local 5
goto ENDIF_32
label IF_32
push this 3
push local 3
add
pop pointer 1
push that 0
pop local 4
push constant 1
pop local 5
push local 3
push constant 1
add
pop local 3
label ENDIF_32
push local 0
push constant 1
add
pop local 0
goto WHILE_30
label END_WHILE_30
push local 2
push constant 32
add
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_29
label END_WHILE_29
push constant 0
return
function Image.pushRender 1
push argument 0
pop pointer 0
label WHILE_33
push this 14
push this 1
lt
not
if-goto END_WHILE_33
label WHILE_34
push this 13
push this 0
lt
not
if-goto END_WHILE_34
push this 3
push local 0
add
pop pointer 1
push that 0
push this 15
push this 13
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
push this 13
push constant 1
add
pop this 13
push local 0
push constant 15
gt
if-goto IF_35
goto ENDIF_35
label IF_35
push constant 0
return
label ENDIF_35
goto WHILE_34
label END_WHILE_34
push this 15
push constant 32
add
pop this 15
push constant 0
pop this 13
push this 14
push constant 1
add
pop this 14
goto WHILE_33
label END_WHILE_33
push constant 0
return
